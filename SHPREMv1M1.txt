--- MOBILE SUPPORT MAP 1

    --------------------------------------------------------------------------------------------
    -- IMPEROR SHARK HUB | PROJECT SLAYERS | MAP 1
    --------------------------------------------------------------------------------------------

    --------- SERVICES // VARIABLES

--- ANTI AFK?
repeat wait() until game:IsLoaded()
game:GetService("Players").LocalPlayer.Idled:connect(function()
game:GetService("VirtualUser"):ClickButton2(Vector2.new())
end)

    local UIS = game:GetService("UserInputService")
    local VirtualUser = game:GetService("VirtualUser")
    local VIM = game:GetService("VirtualInputManager")
    local ReplStorage = game:GetService("ReplicatedStorage")
    local Players = game:GetService("Players")
    local Imput = game:GetService("UserInputService")
    local COREGUI = game:GetService("CoreGui")
    local LP = game:GetService("Players").LocalPlayer
    local HttpService = game:GetService("HttpService")
    local RunS = game:GetService("RunService")
    local X, Y = 0, 0
    local Mouse = LP:GetMouse()
    local GetLocalName = LP.Name
    local request = (syn and syn.request) or (http and http.request) or http_request
    local client = game:GetService("Players").LocalPlayer
    local Plr = game:GetService("Players").LocalPlayer
    local Data = game:GetService("ReplicatedStorage")["Player_Data"][game.Players.LocalPlayer.Name]
    local Tool = game:GetService("ReplicatedStorage").Tools:GetChildren()

    local function GetHuman()
        local h = LP.Character
        h = h and (h:FindFirstChild("Humanoid") or h:FindFirstChildWhichIsA("Humanoid"))
        return h or workspace.CurrentCamera.CameraSubject
    end

    local GramxProjectFloat = tostring(math.random(0, 100000))
    local TweenFloatVelocity = Vector3.new(0,0,0)
    function CreateTweenFloat()
        local BV = game.Players.LocalPlayer.Character.HumanoidRootPart:FindFirstChild(GramxProjectFloat) or Instance.new("BodyVelocity")
        BV.Parent = game.Players.LocalPlayer.Character.HumanoidRootPart
        BV.Name = GramxProjectFloat
        BV.MaxForce = Vector3.new(100000, 100000, 100000)
        BV.Velocity = TweenFloatVelocity
    end


    local function GetDistance(Endpoint)
        if typeof(Endpoint) == "Instance" then
        Endpoint = Vector3.new(Endpoint.Position.X, game.Players.LocalPlayer.Character.HumanoidRootPart.Position.Y, Endpoint.Position.Z)
        elseif typeof(Endpoint) == "CFrame" then
        Endpoint = Vector3.new(Endpoint.Position.X, game.Players.LocalPlayer.Character.HumanoidRootPart.Position.Y, Endpoint.Position.Z)
        end
        local Magnitude = (Endpoint - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
        return Magnitude
    end


    function Tween(Endpoint)
        if typeof(Endpoint) == "Instance" then
        Endpoint = Endpoint.CFrame
        end
        local TweenFunc = {}
        local Distance = GetDistance(Endpoint)
        local TweenInfo = game:GetService("TweenService"):Create(game.Players.LocalPlayer.Character.HumanoidRootPart, TweenInfo.new(Distance/getgenv().TweenSpeed, Enum.EasingStyle.Linear), {CFrame = Endpoint * CFrame.fromAxisAngle(Vector3.new(1,0,0), math.rad(0))})
        TweenInfo:Play()
        function TweenFunc:Cancel()
        TweenInfo:Cancel()
        return false
        end
        if Distance <= 100 then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Endpoint
        TweenInfo:Cancel()
        return false
        end
        return TweenFunc
    end

    local function SkillBind(bind)
        pcall(function()
            VIM:SendKeyEvent(true,bind,false,game)
            task.wait()
            VIM:SendKeyEvent(false,bind,false,game)
            wait(.2)
        end)
    end

    function BeHybrid()
        local Players = game:GetService("Players")
        local ReplicatedStorage = game:GetService("ReplicatedStorage")

        -- Get the LocalPlayer
        local localPlayer = Players.LocalPlayer

        -- Set the Race value for the LocalPlayer
        ReplicatedStorage.Player_Data[localPlayer.Name].Race.Value = 4
    end

    function DieInVoid()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(755, -498, 892)
    end

    function BeDemon()
        local Players = game:GetService("Players")
        local ReplicatedStorage = game:GetService("ReplicatedStorage")

        -- Get the LocalPlayer
        local localPlayer = Players.LocalPlayer

        -- Set the Race value for the LocalPlayer
        ReplicatedStorage.Player_Data[localPlayer.Name].Race.Value = 3
    end

    function SoundGodMode()
        _G.godmode = true
                while _G.godmode do
                local args = {
                    [1] = "skil_ting_asd",
                    [2] = game:GetService("Players").LocalPlayer,
                    [3] = "sound_breathing_smoke_screen",
                    [4] = 1
                }
                
                game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("To_Server"):WaitForChild("Handle_Initiate_S"):FireServer(unpack(args))
                wait(1)
                end
    end

    function BeSlayer()
        local Players = game:GetService("Players")
        local ReplicatedStorage = game:GetService("ReplicatedStorage")

        -- Get the LocalPlayer
        local localPlayer = Players.LocalPlayer

        -- Set the Race value for the LocalPlayer
        ReplicatedStorage.Player_Data[localPlayer.Name].Race.Value = 2
    end

    function BeHuman()
        local Players = game:GetService("Players")
        local ReplicatedStorage = game:GetService("ReplicatedStorage")

        -- Get the LocalPlayer
        local localPlayer = Players.LocalPlayer

        -- Set the Race value for the LocalPlayer
        ReplicatedStorage.Player_Data[localPlayer.Name].Race.Value = 1
    end

    function RemoveDMG()
        local part  =  game:GetService("StarterPlayer").StarterPlayerScripts.Client_Modules.Modules.Extra.Damage_Text

        local part1 =  game:GetService("ReplicatedStorage").Assets.Extras.Damage_Text

        local part2 = game:GetService("Players").LocalPlayer.PlayerScripts.Client_Modules.Modules.Extra.Damage_Text

        local COINS = game:GetService("ReplicatedStorage").Assets.Extras.Coin

        local PARTICLES = game:GetService("ReplicatedStorage").Assets.Particles.Parts

        part:Destroy()

        part1:Destroy()

        part2:Destroy()
        
        COINS:Destroy()

        PARTICLES:Destroy()
    end

    function InfYield()
        loadstring(game:HttpGet(('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'),true))()
    end

    function rejoinifkicked()
        getgenv().rejoin = game:GetService("CoreGui").RobloxPromptGui.promptOverlay.ChildAdded:Connect(function(child)
            if child.Name == 'ErrorPrompt' and child:FindFirstChild('MessageArea') and child.MessageArea:FindFirstChild("ErrorFrame") then
                game:GetService("TeleportService"):Teleport(game.PlaceId)
            end
        end)
    end

    function TitleBuff()
        local folderPath = game:GetService("Players").LocalPlayer.Player_Titles_List

        -- Loop through each child in the folder
        for _, child in ipairs(folderPath:GetChildren()) do
        if child:IsA("IntValue") then
    child.Value = 9999999999
    end
    end
    end

    function SpinDemonArt()
        local args = {
            [1] = "check_can_spin_demon_art"
        }
        
        game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("To_Server"):WaitForChild("Handle_Initiate_S_"):InvokeServer(unpack(args))    
    end

    function RSPY()
        loadstring(game:HttpGet("https://pastebin.com/raw/66NjbMN7",true))()
    end


    function TRXDENTHUB()
        loadstring(game:HttpGetAsync(("https://pastebinp.com/raw/AhnX80SH")))()
    end

    function HubrisGUI()
        loadstring(game:HttpGetAsync("https://gist.github.com/NotHubris/16fbe2bf8d9563e09858c5cd2c6fafce/raw"))()    
    end

    function SYNEXE()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/AZYsGithub/Chillz-s-scripts/main/Synapse-X-Remake.lua"))()
    end

    function NukeVsCityHub()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/NukeVsCity/TheALLHACKLoader/main/NukeLoader"))()
    end

    function SylveonHub()
        local LoaderUrl = "https://raw.githubusercontent.com/ogamertv12/SylveonHub/main/NewLoader.lua"
        repeat wait() until game:IsLoaded()
        loadstring(game:HttpGet(LoaderUrl))()
    end

    function ValyniumHub()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/XO-3S-CL-VCK-jf-3HDM/Products/main/Project-Slayers.lua"))()
    end

    function VGHUB()
        loadstring(game:HttpGet('https://raw.githubusercontent.com/1201for/V.G-Hub/main/V.Ghub'))()
    end

    function EnableCHATLOGS()
        local enabled = true
                local spyOnMyself = true
                local public = false
                local publicItalics = false
                local privateProperties = {
                    Color = Color3.fromRGB(0, 255, 255),
                    Font = Enum.Font.SourceSansBold,
                    TextSize = 18,
                }
                --////////////////////////////////////////////////////////////////
                local StarterGui = game:GetService("StarterGui")
                local Players = game:GetService("Players")
                local player = Players.LocalPlayer or Players:GetPropertyChangedSignal("LocalPlayer"):Wait() or Players.LocalPlayer
                local saymsg = game:GetService("ReplicatedStorage"):WaitForChild("DefaultChatSystemChatEvents"):WaitForChild("SayMessageRequest")
                local getmsg = game:GetService("ReplicatedStorage"):WaitForChild("DefaultChatSystemChatEvents"):WaitForChild("OnMessageDoneFiltering")
                local instance = (_G.chatSpyInstance or 0) + 1
                _G.chatSpyInstance = instance
        
                local function onChatted(p, msg)
                    if _G.chatSpyInstance == instance then
                        if p == player and msg:lower():sub(1, 6) == "/e spy" then
                            enabled = not enabled
                            wait(0.3)
                            privateProperties.Text = "{SPY " .. (enabled and "EN" or "DIS") .. "ABLED}"
                            StarterGui:SetCore("ChatMakeSystemMessage", privateProperties)
                        elseif enabled and (spyOnMyself == true or p ~= player) then
                            msg = msg:gsub("[\n\r]", ''):gsub("\t", ' '):gsub("[ ]+", ' ')
                            local hidden = true
                            local conn = getmsg.OnClientEvent:Connect(function(packet, channel)
                                if packet.SpeakerUserId == p.UserId and packet.Message == msg:sub(#msg - #packet.Message + 1) and (channel == "All" or (channel == "Team" and public == false and p.Team == player.Team)) then
                                    hidden = false
                                end
                            end)
                            wait(1)
                            conn:Disconnect()
                            if hidden and enabled then
                                if public then
                                    saymsg:FireServer((publicItalics and "/me " or '') .. "{SPY} [" .. p.Name .. "]: " .. msg, "All")
                                else
                                    privateProperties.Text = "{SPY} [" .. p.Name .. "]: " .. msg
                                    StarterGui:SetCore("ChatMakeSystemMessage", privateProperties)
                                end
                            end
                        end
                    end
                end
        
                for _, p in ipairs(Players:GetPlayers()) do
                    p.Chatted:Connect(function(msg)
                        onChatted(p, msg)
                    end)
                end
                Players.PlayerAdded:Connect(function(p)
                    p.Chatted:Connect(function(msg)
                        onChatted(p, msg)
                    end)
                end)
                privateProperties.Text = "{SPY " .. (enabled and "EN" or "DIS") .. "ABLED}"
                player:WaitForChild("PlayerGui"):WaitForChild("Chat")
                StarterGui:SetCore("ChatMakeSystemMessage", privateProperties)
                wait(3)
                local chatFrame = player.PlayerGui.Chat.Frame
                chatFrame.ChatChannelParentFrame.Visible = true
                chatFrame.ChatBarParentFrame.Position = chatFrame.ChatChannelParentFrame.Position + UDim2.new(UDim.new(), chatFrame.ChatChannelParentFrame.Size.Y)
        
    end

    function Hop()
        local PlaceID = game.PlaceId
        local AllIDs = {}
        local foundAnything = ""
        local actualHour = os.date("!*t").hour
        local Deleted = false
        function TPReturner()
            local Site;
            if foundAnything == "" then
                Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100'))
            else
                Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100&cursor=' .. foundAnything))
            end
            local ID = ""
            if Site.nextPageCursor and Site.nextPageCursor ~= "null" and Site.nextPageCursor ~= nil then
                foundAnything = Site.nextPageCursor
            end
            local num = 0;
            for i,v in pairs(Site.data) do
                local Possible = true
                ID = tostring(v.id)
                if tonumber(v.maxPlayers) > tonumber(v.playing) then
                    for _,Existing in pairs(AllIDs) do
                        if num ~= 0 then
                            if ID == tostring(Existing) then
                                Possible = false
                            end
                        else
                            if tonumber(actualHour) ~= tonumber(Existing) then
                                local delFile = pcall(function()
                                    AllIDs = {}
                                    table.insert(AllIDs, actualHour)
                                end)
                            end
                        end
                        num = num + 1
                    end
                    if Possible == true then
                        table.insert(AllIDs, ID)
                        wait()
                        pcall(function()
                            wait()
                            game:GetService("TeleportService"):TeleportToPlaceInstance(PlaceID, ID, game.Players.LocalPlayer)
                        end)
                        wait(4)
                    end
                end
            end
        end
        function Teleport() 
            while wait() do
                pcall(function()
                    TPReturner()
                    if foundAnything ~= "" then
                        TPReturner()
                    end
                end)
            end
        end
        Teleport()
    end

    --------- SERVICES // TABLES	

    local TrainersCF = {
        ["Water Trainer"] = CFrame.new(705.209229, 261.426819, -2409.51587, -0.566798735, -5.48522401e-08, -0.641887605, -7.38932258e-08, 1, 2.8182352e-09, 0.641887605, 4.95921633e-08, -0.566798735),
        ["Insect Trainer"] = CFrame.new(2873.81177, 316.95871, -3917.9397, 0.40715313, 4.81208531e-08, 0.91335988, -8.85969982e-08, 1, -1.31911939e-08, -0.91335988, -7.55501048e-08, 0.40715313),
        ["Thunder Trainer"] = CFrame.new(-322.369507, 426.857788, -2384.4021, 0.361198723, -4.49157973e-08, -0.932488859, 1.14233451e-07, 1, -3.91942434e-09, 0.932488859, -1.05105727e-07, 0.361198723),
        ["Wind Trainer"] = CFrame.new(1792.31458, 334.338989, -3521.31104, 0.862527311, -5.19402583e-08, -0.506010473, 8.30083167e-08, 1, 3.88463874e-08, 0.506010473, -7.55091492e-08, 0.862527311)
    }

    local Locations = {
        ["Zapiwara Mountain"] = CFrame.new(-365.617981, 425.857422, -2303.92285, -0.351566792, -6.70503529e-13, 0.93616277, 9.77098068e-13, 1, 1.08316502e-12, -0.93616277, 1.2955277e-12, -0.351566792),
        ["Waroru Cave"] = CFrame.new(683.164062, 261.426819, -2401.41797, 0.137014925, -3.46316149e-08, 0.990568995, 6.38769482e-09, 1, 3.4077793e-08, -0.990568995, 1.65828595e-09, 0.137014925),
        ["Slasher Demon"] = CFrame.new(-485.866608, 274.511871, -3314.98169, -0.79503566, -1.09233929e-08, -0.606562674, 1.19430055e-09, 1, -1.95740775e-08, 0.606562674, -1.62865081e-08, -0.79503566),
        ["Ushumaru Village"] = CFrame.new(-90.0373688, 354.723511, -3170.00439, 0.817297578, -1.0121405e-08, 0.576215804, 3.12666586e-08, 1, -2.6782951e-08, -0.576215804, 3.99059843e-08, 0.817297578),
        ["Ouwbayashi Home"] = CFrame.new(1593.49072, 315.983917, -4618.15088, -0.795035839, -1.09234e-08, -0.606562734, 1.19429622e-09, 1, -1.95740828e-08, 0.606562734, -1.62865081e-08, -0.795035839),
        ["Kabiwaru Village"] = CFrame.new(2037.20203, 315.908813, -2956.77539, -0.795035839, -1.09234e-08, -0.606562734, 1.19429622e-09, 1, -1.95740828e-08, 0.606562734, -1.62865081e-08, -0.795035839),
        ["Zapiwara Cave"] = CFrame.new(-8.2838707, 275.944641, -2414.72607, -0.795035779, -1.09233964e-08, -0.606562555, 1.19429289e-09, 1, -1.95740775e-08, 0.606562555, -1.62865046e-08, -0.795035779),
        ["Dangerous Woods"] = CFrame.new(4061.43677, 342.289581, -3928.90332, -0.795035839, -1.09233973e-08, -0.606562614, 1.19429444e-09, 1, -1.95740775e-08, 0.606562614, -1.62865064e-08, -0.795035839),
        ["Final Selection"] = CFrame.new(5200.76709, 365.949982, -2425.61646, -0.795035779, -1.09233964e-08, -0.606562555, 1.19429289e-09, 1, -1.95740775e-08, 0.606562555, -1.62865046e-08, -0.795035779),
        ["Kiribating Village"] = CFrame.new(-40.3280869, 282.282745, -1623.75159, -0.795035839, -1.09233991e-08, -0.606562614, 1.19429266e-09, 1, -1.95740792e-08, 0.606562614, -1.62865046e-08, -0.795035839),
        ["Butterfly Mansion"] = CFrame.new(3022.90869, 316.075623, -3928.17261, -0.795035779, -1.09233982e-08, -0.606562555, 1.19429144e-09, 1, -1.95740775e-08, 0.606562555, -1.62865046e-08, -0.795035779),
        ["Abubu Cave"] = CFrame.new(1044.44873, 276.190704, -3483.0647, -0.795035839, -1.09233991e-08, -0.606562614, 1.19429266e-09, 1, -1.95740792e-08, 0.606562614, -1.62865046e-08, -0.795035839),
        ["Testing Place"] = CFrame.new(-32, 3, 137)
    }

    local BossessTable = {"Sabito", "Susamaru", "Zanegutsu Kuuchie", "Yahaba", "Bandit Kaden", "Bandit Zoku", "Shiron", "Nezuko", "Slasher", "Giyu", "Sanemi"}
    local bosCFTable = {
        ["Susamaru"] = CFrame.new(1415.65686, 315.908813, -4571.56445, 0.546769679, 9.56999102e-08, -0.837283075, -3.89699188e-08, 1, 8.88496885e-08, 0.837283075, -1.59514606e-08, 0.546769679),
        ["Sabito"] = CFrame.new(1257.60046, 275.351685, -2834.26611, -0.999906898, 0, 0.0136531433, 0, 1, 0, -0.0136531433, 0, -0.999906898),
        ["Zanegutsu Kuuchie"] = CFrame.new(-336.3461, 425.857422, -2271.75513, -0.698250651, 1.51218398e-08, 0.715853333, -2.08847464e-08, 1, -4.1495408e-08, -0.715853333, -4.39246115e-08, -0.698250651),
        ["Yahaba"] = CFrame.new(1415.65686, 315.908813, -4571.56445, 0.546769679, 9.56999102e-08, -0.837283075, -3.89699188e-08, 1, 8.88496885e-08, 0.837283075, -1.59514606e-08, 0.546769679),
        ["Bandit Kaden"] = CFrame.new(-569.584351, 304.46698, -2827.55371, 0.480675608, -1.73434103e-08, 0.876898468, 1.14556499e-07, 1, -4.30165024e-08, -0.876898468, 1.21131407e-07, 0.480675608),
        ["Shiron"] = CFrame.new(3203.10229, 370.884155, -3953.36035, 0.839348018, 3.06273158e-08, -0.54359442, -9.09106301e-09, 1, 4.23049826e-08, 0.54359442, -3.05667527e-08, 0.839348018),
        ["Nezuko"] = CFrame.new(3549.86816, 342.214478, -4595.73145, 0.869256139, 6.38721716e-08, -0.494362026, -6.77404373e-08, 1, 1.00905426e-08, 0.494362026, 2.47170338e-08, 0.869256139),
        ["Bandit Zoku"] = CFrame.new(174.656708, 283.257355, -1969.98572, -0.814278841, -6.32300328e-08, 0.5804739, -9.84254598e-08, 1, -2.91412618e-08, -0.5804739, -8.08625273e-08, -0.814278841),
        ["Slasher"] =  CFrame.new(4355.59082, 342.214478, -4386.90527, -0.943093359, 9.45450722e-08, -0.332528085, 7.62970487e-08, 1, 6.79336054e-08, 0.332528085, 3.86968253e-08, -0.943093359),
        ["Giyu"] = CFrame.new(3013.30884, 316.95871, -2916.32202, 0.76092875, 3.55993954e-08, 0.648835421, -1.75982926e-08, 1, -3.4228016e-08, -0.648835421, 1.46266848e-08, 0.76092875),
        ["Sanemi"] = CFrame.new(1619.91357, 348.461884, -3717.00464, 0.995524168, -1.20393835e-07, 0.0945073739, 1.19773844e-07, 1, 1.22327712e-08, -0.0945073739, -8.58508931e-10, 0.995524168)
    }
        

    local function attack(method)
        wait()
        game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(method, client, client.Character, client.Character.HumanoidRootPart, client.Character.Humanoid, 919, "ground_slash")
        wait()
        game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(method, client, client.Character, client.Character.HumanoidRootPart, client.Character.Humanoid, math.huge, "ground_slash")
        wait()
        game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(method, client, client.Character, client.Character.HumanoidRootPart, client.Character.Humanoid, 919, "ground_slash")
        wait()
        game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(method, client, client.Character, client.Character.HumanoidRootPart, client.Character.Humanoid, math.huge, "ground_slash")
        wait()
        game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(method, client, client.Character, client.Character.HumanoidRootPart, client.Character.Humanoid, 919, "ground_slash")
        wait()
        game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(method, client, client.Character, client.Character.HumanoidRootPart, client.Character.Humanoid, math.huge, "ground_slash")
        wait()
        game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(method, client, client.Character, client.Character.HumanoidRootPart, client.Character.Humanoid, 919, "ground_slash")
        wait()
        game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(method, client, client.Character, client.Character.HumanoidRootPart, client.Character.Humanoid, math.huge, "ground_slash")
        wait()
        game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(method, client, client.Character, client.Character.HumanoidRootPart, client.Character.Humanoid, 919, "ground_slash")
        wait()
        game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(method, client, client.Character, client.Character.HumanoidRootPart, client.Character.Humanoid, math.huge, "ground_slash")
        wait()
        game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(method, client, client.Character, client.Character.HumanoidRootPart, client.Character.Humanoid, 919, "ground_slash")
        wait()
        game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(method, client, client.Character, client.Character.HumanoidRootPart, client.Character.Humanoid, math.huge, "ground_slash")
        wait()
        game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(method, client, client.Character, client.Character.HumanoidRootPart, client.Character.Humanoid, 919, "ground_slash")
        wait()
        game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(method, client, client.Character, client.Character.HumanoidRootPart, client.Character.Humanoid, math.huge, "ground_slash")
        wait()
        game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(method, client, client.Character, client.Character.HumanoidRootPart, client.Character.Humanoid, 919, "ground_slash")
    end

    local attackMethods = {
        ["Combat"] = 'fist_combat',
        ["Sword"] = 'Sword_Combat_Slash',
        ["Scythe"] = 'Scythe_Combat_Slash',
        ["Claw"] = 'claw_Combat_Slash',
        ["Fans"] = 'fans_combat_slash'
    }

    if game.ReplicatedStorage:FindFirstChild("Remotes"):FindFirstChild("getclientping") then 
        game.ReplicatedStorage:FindFirstChild("Remotes"):FindFirstChild("getclientping").OnClientInvoke = function() 
            task.wait(5)
            return true 
        end 
    end 

    --------- SERVICES // ANTI AFK

    local vu = game:GetService("VirtualUser")
    game:GetService("Players").LocalPlayer.Idled:connect(function()
    vu:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
    wait(1)
    vu:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
    end)
    game.NetworkClient.ChildRemoved:Connect(function()
    game:GetService("TeleportService"):Teleport(5956785391)
    end)
    game:GetService("CoreGui").RobloxPromptGui.promptOverlay.ChildAdded:Connect(function(child)
        if child.Name == 'ErrorPrompt' and child:FindFirstChild('MessageArea') and child.MessageArea:FindFirstChild("ErrorFrame") then
            game:GetService("TeleportService"):Teleport(5956785391)
        end
    end)

    --------------------------------------------------------------------------------------------

    --------- LIBRARY
        
        local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()
        local Window = OrionLib:MakeWindow({Name = "Shark Hub v1 PREMIUM // Project Slayers // Map 1", HidePremium = true, SaveConfig = false, ConfigFolder = "SharkHubv1Map2"})
    local HttpService = game:GetService("HttpService")
    local WebhookURL = "" 
        local MainTab = Window:MakeTab({
            Name = "Auto Farms",
            Icon = "rbxassetid://4483345998",
            PremiumOnly = false
        })
        local SettingsTab = Window:MakeTab({
            Name = "Others",
            Icon = "rbxassetid://4483345998",
            PremiumOnly = false
        })
        local MiscTab = Window:MakeTab({
            Name = "Misc",
            Icon = "rbxassetid://4483345998",
            PremiumOnly = false
        })
        local AutoSkill = Window:MakeTab({
            Name = "Auto Skill",
            Icon = "rbxassetid://4483345998",
            PremiumOnly = false
        })
        local HubsTab = Window:MakeTab({
            Name = "Other Hubs",
            Icon = "rbxassetid://4483345998",
            PremiumOnly = false
        })
        local GodModeTab = Window:MakeTab({
            Name = "God Modes",
            Icon = "rbxassetid://4483345998",
            PremiumOnly = false
        })
        local TeleportsTab = Window:MakeTab({
            Name = "Teleports",
            Icon = "rbxassetid://4483345998",
            PremiumOnly = false
        })
        local CreditsTab = Window:MakeTab({
            Name = "Credits",
            Icon = "rbxassetid://4483345998",
            PremiumOnly = false
        })

        OrionLib:MakeNotification({
            Name = "Shark Hub v1",
            Content = "Project Slayers // Map 1",
            Image = "rbxassetid://4483345998",
            Time = 5
        })

    --------------------------------------------------------------------------------------------

    --------- MAIN // FARM

        local FarmSection = MainTab:AddSection({
            Name = "Auto Farms"
        })

        FarmSection:AddToggle({
            Name = "Farm Bosses in Map 1 (NEED TO USE KILL AURA)",
            Default = false,
            Save = true,
            Flag = "boss_farm",
            Callback = function(value)
                getgenv().AllBosses = value
            end    
        })

    local UserInputService = game:GetService("UserInputService")
    local ContextActionService = game:GetService("ContextActionService")
    local mouseEnabled = true
    
    -- Function to disable the mouse clicks
    local function DisableMouseClicks()
        mouseEnabled = false
        ContextActionService:BindAction("DisableMouseClicks", function() end, false, Enum.UserInputType.MouseButton1, Enum.UserInputType.MouseButton2)
    end
    
    -- Function to enable the mouse clicks
    local function EnableMouseClicks()
        mouseEnabled = true
        ContextActionService:UnbindAction("DisableMouseClicks")
    end

    FarmSection:AddToggle({
		Name = "Disable Mouse",
		Default = false,
		Callback = function(value)
			if value then
                DisableMouseClicks()
            else
                EnableMouseClicks()
            end
		end    
	})


	FarmSection:AddToggle({
		Name = "Kill Aura",
		Default = false,
		Callback = function(value)
			getgenv().KillAura = value
		end    
	})

    FarmSection:AddToggle({
        Name = "Global Kill Aura Bypass (ARROW)",
        Default = false,
        Callback = function(value)
            local firing = value -- Update the firing state based on the toggle value
    
            if firing then -- Start the loop only if firing is true
                while firing do -- Loop while firing is true
                    local Handle_Initiate_S_ = game.ReplicatedStorage.Remotes.To_Server.Handle_Initiate_S_
                    Handle_Initiate_S_:InvokeServer("skil_ting_asd", game.Players.LocalPlayer, "arrow_knock_back", 5)
                    wait(15)
                end
            end
        end    
    })

    FarmSection:AddToggle({
        Name = "Global Kill Aura (ARROW) [SLOW]",
        Default = false,
        Callback = function(state)
            local running = state -- Update the running state
    
            if running then -- Start the loop only if running is true
                while running do -- Loop while running is true
                    local success, error = pcall(function()
                        for _, v in ipairs(workspace.Mobs:GetDescendants()) do
                            if v:IsA("Model") and v:FindFirstChild("HumanoidRootPart") then
                                local Handle_Initiate_S_ = game.ReplicatedStorage.Remotes.To_Server.Handle_Initiate_S_
                                Handle_Initiate_S_:InvokeServer("arrow_knock_back_damage", game.Players.LocalPlayer.Character, v.HumanoidRootPart.CFrame, v, 500, 500)
                            end
                        end
                    end)
    
                    if not success then
                        warn("An error occurred:", error)
                    end
    
                    -- Add a delay between iterations to prevent excessive server load
                    wait(0.1) -- Adjust the delay time as desired
                end
            end
        end    
    })
    
local running = false -- Variable to track the state

FarmSection:AddToggle({
    Name = "Global Kill Aura (ARROW) [SAFEST]",
    Default = false,
    Callback = function(state)
        running = state -- Update the running state

        if running then -- Start the loop only if running is true
            while running do -- Loop while running is true
                local success, error = pcall(function()
                    local hitCounter = {} -- Counter for each model

                    for i, v in next, workspace.Mobs:GetDescendants() do
                        if v:IsA("Model") and v:FindFirstChild("HumanoidRootPart") then
                            local modelId = v:GetFullName()

                            -- Check if the model has a counter and initialize it if not present
                            if not hitCounter[modelId] then
                                hitCounter[modelId] = 0
                            end

                            -- Check if the model has been hit less than 2 times
                            if hitCounter[modelId] < 2 then
                                local humanoid = v:FindFirstChildOfClass("Humanoid")
                                if humanoid and humanoid.Health > 0 then
                                    local Handle_Initiate_S_ = game.ReplicatedStorage.Remotes.To_Server.Handle_Initiate_S_
                                    Handle_Initiate_S_:InvokeServer("arrow_knock_back_damage", game.Players.LocalPlayer.Character, v.HumanoidRootPart.CFrame, v, 500, 500)
                                    hitCounter[modelId] = hitCounter[modelId] + 1
                                else
                                    -- The humanoid health is 0, change to another model
                                    -- Replace the code below with the logic to change the model
                                    print("Model with health 0:", modelId)
                                end
                            end

                            -- Check if we hit two mobs/models
                            local hitCount = 0
                            for _, count in pairs(hitCounter) do
                                hitCount = hitCount + count
                            end
                            if hitCount >= 2 then
                                break -- Exit the loop if we hit two mobs/models
                            end
                        end
                    end
                end)

                if not success then
                    print("An error occurred:", error)
                end

                -- Add a delay between iterations to prevent excessive server load
                wait() -- Adjust the delay time as desired
            end
        end
    end
})

    getgenv().Method = "Sword"
    FarmSection:AddDropdown({
        Name = "Kill Aura Method",
        Default = "Sword",
        Options = {"Sword", "Combat", "Claw", "Scythe", "Fans"},
        Save = true,
        Flag = "ka_method",
        Callback = function(v)
            getgenv().Method = v
        end    
    })

    getgenv().FarmMethod = "Above"
    FarmSection:AddDropdown({
        Name = "Farm Method",
        Default = "Above",
        Options = {"Above", "Below", "Behind", "Front"},
        Save = true,
        Flag = "farm_method",
        Callback = function(v)
            getgenv().FarmMethod = v
        end    
    })

local TweenSpeedSlider = FarmSection:AddSlider({
    Name = "Tween Speed",
    Min = 100,
    Max = 400,
    Default = 100,
    Color = Color3.fromRGB(255, 255, 255),
    Increment = 10,
    ValueName = "Tween Speed",
    Save = true,
    Flag = "tween_speed",
    Callback = function(self)
        getgenv().TweenSpeed = self
    end
})

local function AddSpeed()
    local currentSpeed = getgenv().TweenSpeed or 100
    local newSpeed = math.clamp(currentSpeed + 10, 100, 400)
    getgenv().TweenSpeed = newSpeed
    TweenSpeedSlider:SetValue(newSpeed)
end

local function LessenSpeed()
    local currentSpeed = getgenv().TweenSpeed or 100
    local newSpeed = math.clamp(currentSpeed - 10, 100, 400)
    getgenv().TweenSpeed = newSpeed
    TweenSpeedSlider:SetValue(newSpeed)
end

FarmSection:AddButton({
    Name = "Add +10 TweenSpeed",
    Callback = function()
        AddSpeed()
    end
})

FarmSection:AddButton({
    Name = "Lessen -10 TweenSpeed",
    Callback = function()
        LessenSpeed()
    end
})


    FarmSection:AddSlider({
    Name = "Farm Distance",
    Min = 1,
    Max = 10,
    Default = 5,
    Color = Color3.fromRGB(255,255,255),
    Increment = 1,
    ValueName = "Farm Distance",
    Save = true,
    Flag = "farm_distance",
    Callback = function(self)
        getgenv().Distance = 5
        getgenv().Distance = self
    end    
    })

    local FarmSection = MainTab:AddSection({
        Name = "Other Auto Farms"
    })

    FarmSection:AddToggle({
        Name = "Auto Collect Lily",
        Default = false,
        Save = true,
        Flag = "auto_collect_lilyt",
        Callback = function(value)
            TP = value
            if TP then
                getgenv().speed = 270
                getgenv().AutoRejoin = true -- Automatically rejoins when you're kicked
                getgenv().delay = 1
    
                game.Players.PlayerRemoving:Connect(function(player)
                    if player.Name == game.Players.LocalPlayer.Name and getgenv().AutoRejoin then
                        local ts = game:GetService("TeleportService")
                        ts:Teleport(game.PlaceId)
                        autoload()
                    end
                end)
    
                local RunService = game:GetService("RunService")
                local Players = game:GetService("Players")
                local Player = Players.LocalPlayer
                local chr = Player.Character
                local root = chr.HumanoidRootPart
    
                local TeleportSpeed = getgenv().speed or 250
                local NextFrame = RunService.Heartbeat
    
                local function fireproximityprompt(ProximityPrompt, Amount, Skip)
                    assert(ProximityPrompt, "Argument #1 Missing or nil")
                    assert(
                        typeof(ProximityPrompt) == "Instance" and ProximityPrompt:IsA("ProximityPrompt"),
                        "Attempted to fire a Value that is not a ProximityPrompt"
                    )
                    local HoldDuration = ProximityPrompt.HoldDuration
                    if Skip then
                        ProximityPrompt.HoldDuration = 0
                    end
                    for i = 1, Amount or 1 do
                        ProximityPrompt:InputHoldBegin()
                        if Skip then
                            local RunService = game:GetService("RunService")
                            local Start = tick()
                            repeat
                                RunService.Heartbeat:Wait(0.1)
                            until tick() - Start > HoldDuration
                        end
                        ProximityPrompt:InputHoldEnd()
                    end
                    ProximityPrompt.HoldDuration = HoldDuration
                end
    
                local function ImprovedTeleport(Target)
                    if typeof(Target) == "Instance" and Target:IsA("BasePart") then
                        Target = Target.Position
                    end
                    if typeof(Target) == "CFrame" then
                        Target = Target.p
                    end
                    local HRP = Player.Character and Player.Character:FindFirstChild("HumanoidRootPart")
                    if not HRP then
                        return
                    end
                    local StartingPosition = HRP.Position
                    local PositionDelta = Target - StartingPosition -- Calculating the difference between the start and end positions.
                    local StartTime = tick()
                    local TotalDuration = (StartingPosition - Target).magnitude / TeleportSpeed
                    repeat
                        NextFrame:Wait()
                        local Delta = tick() - StartTime
                        local Progress = math.min(Delta / TotalDuration, 1) -- Getting the percentage of completion of the teleport (between 0-1, not 0-100)
                        -- We also use math.min to maximize it at 1 in case the player gets an FPS drop, so it doesn't go past the target.
                        local MappedPosition = StartingPosition + (PositionDelta * Progress)
                        HRP.Velocity = Vector3.new() -- Resetting the effect of gravity so it doesn't get too much and drag the player below the ground.
                        HRP.CFrame = CFrame.new(MappedPosition)
                    until (HRP.Position - Target).magnitude <= TeleportSpeed / 2
                    HRP.Anchored = false
                    HRP.CFrame = CFrame.new(Target)
                end
    
                local flowers = game:GetService("Workspace").Demon_Flowers_Spawn
    
                local function getFlower()
                    local dist, flower = math.huge
                    for i, v in next, flowers:GetChildren() do
                        if v:IsA("Model") then
                            local mag = (root.Position - v.WorldPivot.Position).magnitude
                            if mag < dist then
                                dist = mag
                                flower = v
                            end
                        end
                    end
                    return flower
                end
    
                oldasdqw = coroutine.wrap(function()
                    while TP do
                        task.wait()
                        ImprovedTeleport(getFlower().WorldPivot.Position)
                        task.wait(getgenv().delay)
                        for i, v in next, getFlower():GetDescendants() do
                            if v:IsA("ProximityPrompt") then
                                local try = 0
                                repeat
                                    wait(0.01)
                                    try += 1
                                    fireproximityprompt(v, 1, true)
                                    if not getFlower() or not TP then
                                        oldasdqw()
                                        break
                                    end
                                until try == 10
                                getFlower():Destroy()
                            end
                        end
                    end
                end)
    
                oldasdqw()
            else
                TP = false
                if oldasdqw then
                    oldasdqw()
                end
            end
        end
    })

    
    local textbox = FarmSection:AddTextbox({
        Name = "WEBHOOK",
        Default = "",
        TextDisappear = true,
        Callback = function(value)
            WebhookURL = value
        end
    })

        FarmSection:AddToggle({
            Name = "Auto Collect Chest (DOES NOT Removes Chest After Collect)",
            Default = false,
            Save = true,
            Flag = "auto_collect_chest",
            Callback = function(value)
                getgenv().AutoCollectChest = value
            end    
        })
        FarmSection:AddToggle({
            Name = "Auto Collect Chest v2 (Removes Chest After Collect)",
            Default = false,
            Save = true,
            Flag = "auto_collect_chest",
            Callback = function(value)
                getgenv().AutoCollectChestv2 = value
            end    
        })

    FarmSection:AddToggle({
            Name = "Auto Collect Chest v3 [FOR WEBHOOK] [BETA]",
            Default = false,
            Save = true,
            Flag = "auto_collect_chest3",
            Callback = function(value)
                getgenv().AutoCollectChestv3 = value
            end
    })

        FarmSection:AddToggle({
            Name = "Auto Block [No Skills]",
            Default = false,
            Save = true,
            Flag = "auto_block",
            Callback = function(value)
                getgenv().AutoBlock = value
            end    
        })

        FarmSection:AddToggle({
            Name = "Auto Eat Souls [Demon]",
            Default = false,
            Save = true,
            Flag = "auto_eat_souls",
            Callback = function(value)
                getgenv().AutoEatSouls = value
            end    
        })

        FarmSection:AddButton({
            Name = "RESET (Teleport to Void)",
            Callback = function()
                DieInVoid()
            end    
        })

        FarmSection:AddButton({
            Name = "Rejoin if Kicked (Click Once and Use It FIRST)",
            Callback = function()
                rejoinifkicked()
            end    
        })

        -- // KILL AURA - FARM
        
        task.spawn(function()
            while task.wait() do
                pcall(function()
                if KillAura then
                    attack(attackMethods[Method])
                    task.wait(1.25)
                    repeat wait() until game.Players.LocalPlayer:WaitForChild("combotangasd123").Value == 0
                    end
                end)
            end
        end)
        
        local function GetNearestBoss()
        
            local Bosses = game:GetService("Workspace").Mobs:GetDescendants()
            local BossesTable = {}
        
            for i,v in pairs(Bosses) do
                if table.find(BossessTable, v.Name) and v:IsA("Model") and v:FindFirstChild("Humanoid") then
                    if v.Humanoid.Health > 0 then
                        table.insert(BossesTable, v)
                    end
                end
            end
        
            local NearestBoss = nil
            local NearestBossDistance = math.huge
        
            for i,v in pairs(BossesTable) do
                local Distance = GetDistance(v:GetModelCFrame() * FarmModes)
                if Distance < NearestBossDistance then
                    NearestBoss = v
                    NearestBossDistance = Distance
                end
            end
        
            return NearestBoss
        end

        -- // AUTO ALL BOSSES - FARM
        
        spawn(function()
            while task.wait() do
                pcall(function()
                    if getgenv().AllBosses then
        
                        if not LP.Character.HumanoidRootPart:FindFirstChild("BodyVelocity") then
                            antifall3 = Instance.new("BodyVelocity", LP.Character.HumanoidRootPart)
                            antifall3.Velocity = Vector3.new(0, 0, 0)
                            antifall3.MaxForce = Vector3.new(9e9, 9e9, 9e9)
                        elseif LP.Character.HumanoidRootPart:FindFirstChild("BodyVelocity") then
                            local v = GetNearestBoss()
        
                                        repeat task.wait()                                      
                                            if GetDistance(v:GetModelCFrame() * FarmModes) < 25 and GetDistance(v:GetModelCFrame() * FarmModes) < 150 then
                                                if TweenFa then
                                                TweenFa:Cancel()
                                                wait(.1)
                                                end
                                                LP.Character.HumanoidRootPart.CFrame = v:GetModelCFrame() * FarmModes
                                            else
                                                TweenFa = Tween(v:GetModelCFrame() * FarmModes)
                                            end
                                            if v.Humanoid.Health > 0 and v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and GetDistance(v:GetModelCFrame() * FarmModes) < 10 then
                                                NearestMobs = true
                                            elseif v.Humanoid.Health <= 0 or not v:FindFirstChild("Humanoid") and GetDistance(v:GetModelCFrame() * FarmModes) > 10 then
                                                NearestMobs = false
                                            end
                                        until not getgenv().AllBosses or not v.Parent or v.Humanoid.Health <= 0 or not v:IsDescendantOf(workspace)
                                        NearestMobs = false
                                
                            
                        end
                    else
                        antifall3:Destroy()
                    end
                    if getgenv().AllBosses == false then
                        TweenFa:Cancel()
                    end
                end)
            end
        end)
        
        -- // AUTO COLLECT CHESTS - FARM
        
        spawn(function()
            while task.wait() do
                if AutoCollectChest then
                    for _, v in pairs(game:GetService("Workspace").Debree:GetChildren()) do
                        if v.Name == "Loot_Chest" then
                            for _, c in pairs(v:FindFirstChild("Drops"):GetChildren()) do
                                v["Add_To_Inventory"]:InvokeServer(c.Name)
                                delay(0.1, function()
                                    c:Destroy()
                                end)
                            end
                    end
                end
            end
            end
        end)

        spawn(function()
            while task.wait() do
                if AutoCollectChestv2 then
                    for _, v in pairs(game:GetService("Workspace").Debree:GetChildren()) do
                        if v.Name == "Loot_Chest" and v:FindFirstChild("Drops") then
                            if #v.Drops:GetChildren() == 0 then
                                v:Destroy()
                            else
                                for _, drop in pairs(v.Drops:GetChildren()) do
                                    local args = {
                                        [1] = drop.Name
                                    }
        
                                    v.Add_To_Inventory:InvokeServer(unpack(args))
                                    if #v.Drops:GetChildren() == 0 then
                                        v:Destroy()
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end)    
        
    local function sendWebhook(itemName)
        local payload = {
            ["content"] = "",
            ["embeds"] = {{
                ["title"] = "**Item Obtained!**",
                ["description"] = game.Players.LocalPlayer.DisplayName .. " obtained the item: " .. itemName,
                ["type"] = "rich",
                ["color"] = tonumber(0xffffff),
                ["fields"] = {
                    {
                        ["name"] = "Hardware ID:",
                        ["value"] = "Unknown", -- Replace with the hardware ID retrieval method suitable for Fluxus
                        ["inline"] = true
                    }
                }
            }}
        }

        local headers = {
            ["Content-Type"] = "application/json"
        }

        local requestBody = game:GetService("HttpService"):JSONEncode(payload)

        local response = http_request({
            Url = WebhookURL,
            Method = "POST",
            Headers = headers,
            Body = requestBody
        })
    end

    spawn(function()
        while true do
            if AutoCollectChestv3 then
                for _, v in pairs(game:GetService("Workspace").Debree:GetChildren()) do
                    if v.Name == "Loot_Chest" and v:FindFirstChild("Drops") then
                        if #v.Drops:GetChildren() == 0 then
                            v:Destroy()
                        else
                            for _, drop in pairs(v.Drops:GetChildren()) do
                                local args = {
                                    [1] = drop.Name
                                }

                                v.Add_To_Inventory:InvokeServer(unpack(args))
                                if #v.Drops:GetChildren() == 0 then
                                    v:Destroy()
                                end

                                sendWebhook(drop.Name)
                            end
                        end
                    end
                end
            end
            wait()
        end
    end)

        -- // AUTO BLOCK - FARM
        
        spawn(function()
            while task.wait() do
                if getgenv().AutoBlock then
                local args = {[1] = "add_blocking",[3] = 11565.6265117,[4] = game:GetService("ReplicatedStorage").PlayerValues[game.Players.LocalPlayer.Name],[5] = math.huge}game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(unpack(args))
                end
            end
        end)
        
        -- // AUTO EAT SOULS - FARM
        
        spawn(function()
            while task.wait() do
                if AutoEatSouls then
                    for i,v in pairs(game:GetService("Workspace").Debree:GetChildren()) do
                        if v.Name == "Soul" then
                            pcall(function()
                                workspace.Debree.Soul.Handle.Eatthedamnsoul:FireServer()
                            end)
                        end
                    end
                end
            end
        end)

    --------- SETTINGS // METHODS

    local AutoSkills = AutoSkill:AddSection({
        Name = "Auto Skill"
    })

    AutoSkills:AddToggle({
        Name = "Toggle Auto Skill",
        Default = false,
        Save = true,
        Flag = "Auto_Skill",
        Callback = function(t)
            getgenv().AutoUseSkills = t
        end    
    })

    AutoSkills:AddToggle({
        Name = "[Z] Move]",
        Default = false,
        Save = true,
        Flag = "Auto_Skill",
        Callback = function(t)
            getgenv().ZMove = t
        end    
    })

    AutoSkills:AddToggle({
        Name = "[X] Move]",
        Default = false,
        Save = true,
        Flag = "Auto_Skill",
        Callback = function(t)
            getgenv().XMove = t
        end    
    })

    AutoSkills:AddToggle({
        Name = "[C] Move]",
        Default = false,
        Save = true,
        Flag = "Auto_Skill",
        Callback = function(t)
            getgenv().CMove = t
        end    
    })

    AutoSkills:AddToggle({
        Name = "[V] Move]",
        Default = false,
        Save = true,
        Flag = "Auto_Skill",
        Callback = function(t)
            getgenv().VMove = t
        end    
    })

    AutoSkills:AddToggle({
        Name = "[B] Move]",
        Default = false,
        Save = true,
        Flag = "Auto_Skill",
        Callback = function(t)
            getgenv().BMove = t
        end    
    })

    AutoSkills:AddToggle({
        Name = "[N] Move]",
        Default = false,
        Save = true,
        Flag = "Auto_Skill",
        Callback = function(t)
            getgenv().NMove = t
        end    
    })

    -- // AUTO USE SKILLS - SKILLS
        
    spawn(function()
        while task.wait() do
        pcall(function()
            if SkillActive then
                if AutoUseSkills and getgenv().ZMove and not UsingSkill then
                    for i = 1,7 do
                    UsingSkill = true
                    SkillBind("Z")
                    end              
                    UsingSkill = false
                end
            end
        end)
        end
    end)
    
    
    spawn(function()
        while task.wait() do
        pcall(function()
            if SkillActive then
                if AutoUseSkills and getgenv().XMove and not UsingSkill then
                    for i = 1,7 do
                    UsingSkill = true
                    SkillBind("X")
                    end              
                    UsingSkill = false
                end
            end
        end)
        end
    end)
    
    spawn(function()
        while task.wait() do
        pcall(function()
            if SkillActive then
                if AutoUseSkills and getgenv().CMove and not UsingSkill then
                    for i = 1,7 do
                    UsingSkill = true
                    SkillBind("C")
                    end              
                    UsingSkill = false
                end
            end
        end)
        end
    end)
    
    spawn(function()
        while task.wait() do
        pcall(function()
            if SkillActive then
                if AutoUseSkills and getgenv().VMove and not UsingSkill then
                    for i = 1,7 do
                    UsingSkill = true
                    SkillBind("V")
                    end              
                    UsingSkill = false
                end
            end
        end)
        end
    end)
    
    spawn(function()
        while task.wait() do
        pcall(function()
            if SkillActive then
                if AutoUseSkills and getgenv().BMove and not UsingSkill then
                    for i = 1,7 do
                    UsingSkill = true
                    SkillBind("B")
                    end              
                    UsingSkill = false
                end
            end
        end)
        end
    end)
    
    spawn(function()
        while task.wait() do
        pcall(function()
            if SkillActive then
                if AutoUseSkills and getgenv().NMove and not UsingSkill then
                    for i = 1,7 do
                    UsingSkill = true
                    SkillBind("N")
                    end              
                    UsingSkill = false
                end
            end
        end)
        end
    end)

    local RaceSection = SettingsTab:AddSection({
        Name = "Change Race"
    })
    SettingsTab:AddButton({
            Name = "Become a Hybrid!",
            Callback = function()
                BeHybrid()
            end    
        })

        SettingsTab:AddButton({
            Name = "Become a Demon!",
            Callback = function()
                BeDemon()
            end    
        })

        SettingsTab:AddButton({
            Name = "Become a Slayer!",
            Callback = function()
                BeSlayer()
            end    
        })

        SettingsTab:AddButton({
            Name = "Become a Human!",
            Callback = function()
                BeHuman()
            end    
        })

    local RaceSection = SettingsTab:AddSection({
            Name = "Another Stuff"
        })

        SettingsTab:AddButton({
            Name = "Remove Damage Texts and Particles!",
            Callback = function()
                RemoveDMG()
            end    
        })

        SettingsTab:AddButton({
            Name = "Enable Chat Logs",
            Callback = function()
                EnableCHATLOGS()
            end    
        })

        SettingsTab:AddButton({
            Name = "Spin Demon Art (Use your Fist to check)",
            Callback = function()
                SpinDemonArt()
            end    
        })
        
        SettingsTab:AddButton({
            Name = "Title Buffs (Visual)",
            Callback = function()
                TitleBuff()
            end    
        })
    --------- Other Hubs

    local HubsTab = HubsTab:AddSection({
        Name = "Other Exploit Hubs"
    })

    HubsTab:AddButton({
            Name = "Infinite Yield",
            Callback = function()
                InfYield()
            end    
        })

        HubsTab:AddButton({
            Name = "Simple Spy",
            Callback = function()
                RSPY()
            end    
        })
        
        HubsTab:AddButton({
            Name = "TRXDENT Hub",
            Callback = function()
                TRXDENTHUB()
            end    
        })

        HubsTab:AddButton({
            Name = "NotHubris GUI",
            Callback = function()
                HubrisGUI()
            end    
        })

        HubsTab:AddButton({
            Name = "Synapse Executor",
            Callback = function()
                SYNEXE()
            end    
        })

        HubsTab:AddButton({
            Name = "NukeVsCity Hub",
            Callback = function()
                NukeVsCityHub()
            end    
        })

        HubsTab:AddButton({
            Name = "Sylveon Hub",
            Callback = function()
                SylveonHub()
            end    
        })

        HubsTab:AddButton({
            Name = "Valynium Hub",
            Callback = function()
                ValyniumHub()
            end    
        })

        HubsTab:AddButton({
            Name = "V.G Hub",
            Callback = function()
                VGHUB()
            end    
        })

    --------------------------------------------------------------------------------------------

    --------- God Mode Tab
    local GodMode = GodModeTab:AddSection({
        Name = "Universal"
    })
    GodMode:AddToggle({
        Name = "Universal God Mode [ALL RACE]",
        Default = false,
        Save = true,
        Flag = "Universal_GodMode",
        Callback = function(state)
            if state then
                _G.godmode2 = true
        while _G.godmode2 do
        local args = {
            [1] = "skil_ting_asd",
            [2] = game:GetService("Players").LocalPlayer,
            [3] = "scythe_asteroid_reap",
            [4] = 1
        }
        
        game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("To_Server"):WaitForChild("Handle_Initiate_S"):FireServer(unpack(args))
        wait(0.1)
        end
            else
                _G.godmode2 = false
                while _G.godmode2 do
                local args = {
                [1] = "skil_ting_asd",
                [2] = game:GetService("Players").LocalPlayer,
                [3] = "scythe_asteroid_reap",
                [4] = 1
                }
                
                game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("To_Server"):WaitForChild("Handle_Initiate_S"):FireServer(unpack(args))
                wait(0.1)
                end
            end
        end    
    })

    local GodMode = GodModeTab:AddSection({
        Name = "God Mode [DEMON]"
        })

    GodMode:AddToggle({
        Name = "God Mode [Shockwave 50 + Demon]",
        Default = false,
        Save = true,
        Flag = "Shockwave_GodMode",
        Callback = function(state)
            if state then
                _G.godmode = true
        while _G.godmode do
        local args = {
            [1] = "skil_ting_asd",
            [2] = game:GetService("Players").LocalPlayer,
            [3] = "akaza_bda_compass_needle",
            [4] = 1
        }
        
        game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("To_Server"):WaitForChild("Handle_Initiate_S"):FireServer(unpack(args))
        wait(0.1)
        end
            else
                _G.godmode = false
                while _G.godmode do
                local args = {
                [1] = "skil_ting_asd",
                [2] = game:GetService("Players").LocalPlayer,
                [3] = "akaza_bda_compass_needle",
                [4] = 1
                }
                
                game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("To_Server"):WaitForChild("Handle_Initiate_S"):FireServer(unpack(args))
                wait(0.1)
                end
            end
        end    
    })

    GodMode:AddToggle({
        Name = "God Mode [Dream ULT + Demon]",
        Default = false,
        Save = true,
        Flag = "Dream_GodMode",
        Callback = function(state)
            if state then
                _G.DREAMgodmode = true
        while _G.DREAMgodmode do
        local args = {
            [1] = "skil_ting_asd",
            [2] = game:GetService("Players").LocalPlayer,
            [3] = "dream_bda_flesh_monster",
            [4] = 1
        }
        
        game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("To_Server"):WaitForChild("Handle_Initiate_S"):FireServer(unpack(args))
        wait(0.1)
        end
            else
                _G.DREAMgodmode = false
                while _G.DREAMgodmode do
                local args = {
                [1] = "skil_ting_asd",
                [2] = game:GetService("Players").LocalPlayer,
                [3] = "dream_bda_flesh_monster",
                [4] = 1
                }
                
                game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("To_Server"):WaitForChild("Handle_Initiate_S"):FireServer(unpack(args))
                wait(0.1)
                end
            end
        end    
    })

    GodMode:AddToggle({
        Name = "God Mode [Ice ULT + Demon]",
        Default = false,
        Save = true,
        Flag = "Ice_GodMode",
        Callback = function(state)
            if state then
                _G.ICEgodmode = true
        while _G.ICEgodmode do
        local args = {
            [1] = "skil_ting_asd",
            [2] = game:GetService("Players").LocalPlayer,
            [3] = "ice_demon_art_bodhisatva",
            [4] = 1
        }
        
        game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("To_Server"):WaitForChild("Handle_Initiate_S"):FireServer(unpack(args))
        wait(0.1)
        end
            else
                _G.ICEgodmode = false
                while _G.ICEgodmode do
                local args = {
                [1] = "skil_ting_asd",
                [2] = game:GetService("Players").LocalPlayer,
                [3] = "ice_demon_art_bodhisatva",
                [4] = 1
                }
                
                game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("To_Server"):WaitForChild("Handle_Initiate_S"):FireServer(unpack(args))
                wait(0.1)
                end
            end
        end    
    })

    GodMode:AddToggle({
        Name = "God Mode [Blood ULT + Demon]",
        Default = false,
        Save = true,
        Flag = "Blood_GodMode",
        Callback = function(state)
            if state then
                _G.BloodGM = true
        while _G.BloodGM do
        local args = {
            [1] = "skil_ting_asd",
            [2] = game:GetService("Players").LocalPlayer,
            [3] = "explosive_demon_art_blood_burst",
            [4] = 1
        }
        
        game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("To_Server"):WaitForChild("Handle_Initiate_S"):FireServer(unpack(args))
        wait(0.1)
        end
            else
                _G.BloodGM = false
                while _G.BloodGM do
                local args = {
                [1] = "skil_ting_asd",
                [2] = game:GetService("Players").LocalPlayer,
                [3] = "explosive_demon_art_blood_burst",
                [4] = 1
                }
                
                game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("To_Server"):WaitForChild("Handle_Initiate_S"):FireServer(unpack(args))
                wait(0.1)
                end
            end
        end    
    })

    local GodMode = GodModeTab:AddSection({
        Name = "God Modes [SLAYERS/HUMAN]"
    })

    GodMode:AddToggle({
        Name = "God Mode [Sound 50+]",
        Default = false,
        Save = true,
        Flag = "Sound_GodMode",
        Callback = function(state)
            if state then
                _G.SoundGM = true
                while _G.SoundGM do
                local args = {
                [1] = "skil_ting_asd",
                [2] = game:GetService("Players").LocalPlayer,
                [3] = "sound_breathing_smoke_screen",
                [4] = 1
                }
        
                game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("To_Server"):WaitForChild("Handle_Initiate_S"):FireServer(unpack(args))
            wait(0.1)
                end
            else
                _G.SoundGM = false
                while _G.SoundGM do
                local args = {
                [1] = "skil_ting_asd",
                [2] = game:GetService("Players").LocalPlayer,
                [3] = "sound_breathing_smoke_screen",
                [4] = 1
                }
                
                game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("To_Server"):WaitForChild("Handle_Initiate_S"):FireServer(unpack(args))
                wait(0.1)
                end
            end
        end    
    })

    GodMode:AddToggle({
        Name = "God Mode [Flame 32+]",
        Default = false,
        Save = true,
        Flag = "Flame_GodMode",
        Callback = function(state)
            if state then
                _G.FlameGM = true
                while _G.FlameGM do
                local args = {
                [1] = "skil_ting_asd",
                [2] = game:GetService("Players").LocalPlayer,
                [3] = "flame_breathing_flaming_eruption",
                [4] = 1
                }
        
                game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("To_Server"):WaitForChild("Handle_Initiate_S"):FireServer(unpack(args))
            wait(0.1)
                end
            else
                _G.FlameGM = false
                while _G.FlameGM do
                local args = {
                [1] = "skil_ting_asd",
                [2] = game:GetService("Players").LocalPlayer,
                [3] = "flame_breathing_flaming_eruption",
                [4] = 1
                }
                
                game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("To_Server"):WaitForChild("Handle_Initiate_S"):FireServer(unpack(args))
                wait(0.1)
                end
            end
        end    
    })

    GodMode:AddToggle({
        Name = "God Mode [Beast 40+]",
        Default = false,
        Save = true,
        Flag = "Beast_GodMode",
        Callback = function(state)
            if state then
                _G.BeastGM = true
                while _G.BeastGM do
                local args = {
                [1] = "skil_ting_asd",
                [2] = game:GetService("Players").LocalPlayer,
                [3] = "Beast_breathing_devouring_slash",
                [4] = 1
                }
        
                game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("To_Server"):WaitForChild("Handle_Initiate_S"):FireServer(unpack(args))
            wait(0.5)
                end
            else
                _G.BeastGM = false
                while _G.BeastGM do
                local args = {
                [1] = "skil_ting_asd",
                [2] = game:GetService("Players").LocalPlayer,
                [3] = "Beast_breathing_devouring_slash",
                [4] = 1
                }
                
                game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("To_Server"):WaitForChild("Handle_Initiate_S"):FireServer(unpack(args))
                wait(0.5)
                end
            end
        end    
    })

    GodMode:AddToggle({
        Name = "God Mode [Insect 28+]",
        Default = false,
        Save = true,
        Flag = "Insect_GodMode",
        Callback = function(state)
            if state then
                _G.InsectGM = true
                while _G.InsectGM do
                local args = {
                [1] = "skil_ting_asd",
                [2] = game:GetService("Players").LocalPlayer,
                [3] = "insect_breathing_dance_of_the_centipede",
                [4] = 1
                }
        
                game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("To_Server"):WaitForChild("Handle_Initiate_S"):FireServer(unpack(args))
            wait(0.5)
                end
            else
                _G.InsectGM = false
                while _G.InsectGM do
                local args = {
                [1] = "skil_ting_asd",
                [2] = game:GetService("Players").LocalPlayer,
                [3] = "insect_breathing_dance_of_the_centipede",
                [4] = 1
                }
                
                game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("To_Server"):WaitForChild("Handle_Initiate_S"):FireServer(unpack(args))
                wait(0.5)
                end
            end
        end    
    })

    GodMode:AddToggle({
        Name = "God Mode [Wind 30+]",
        Default = false,
        Save = true,
        Flag = "Wind_GodMode",
        Callback = function(state)
            if state then
                _G.WindGM = true
                while _G.WindGM do
                local args = {
                [1] = "skil_ting_asd",
                [2] = game:GetService("Players").LocalPlayer,
                [3] = "Wind_breathing_black_wind_mountain_mist",
                [4] = 1
                }
        
                game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("To_Server"):WaitForChild("Handle_Initiate_S"):FireServer(unpack(args))
            wait(0.5)
                end
            else
                _G.WindGM = false
                while _G.WindGM do
                local args = {
                [1] = "skil_ting_asd",
                [2] = game:GetService("Players").LocalPlayer,
                [3] = "Wind_breathing_black_wind_mountain_mist",
                [4] = 1
                }
                
                game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("To_Server"):WaitForChild("Handle_Initiate_S"):FireServer(unpack(args))
                wait(0.5)
                end
            end
        end    
    })

    GodMode:AddToggle({
        Name = "God Mode [Water 30+]",
        Default = false,
        Save = true,
        Flag = "Water_GodMode",
        Callback = function(state)
            if state then
                _G.WaterGM = true
                while _G.WaterGM do
                local args = {
                [1] = "skil_ting_asd",
                [2] = game:GetService("Players").LocalPlayer,
                [3] = "Water_fall_basin",
                [4] = 1
                }
        
                game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("To_Server"):WaitForChild("Handle_Initiate_S"):FireServer(unpack(args))
            wait(0.5)
                end
            else
                _G.WaterGM = false
                while _G.WaterGM do
                local args = {
                [1] = "skil_ting_asd",
                [2] = game:GetService("Players").LocalPlayer,
                [3] = "Water_fall_basin",
                [4] = 1
                }
                
                game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("To_Server"):WaitForChild("Handle_Initiate_S"):FireServer(unpack(args))
                wait(0.5)
                end
            end
        end    
    })


    --------------------------------------------------------------------------------------------
    --------- MISC // MISCELLANEOUS
        local MiscellaneousSection = MiscTab:AddSection({
        Name = "Miscellaneous"
        })

        MiscellaneousSection:AddToggle({
            Name = "Infinite Stamina",
            Default = false,
            Save = true,
            Flag = "infinite_stamina",
            Callback = function(state)
                if state then
                    getgenv().infstuff = true
                    while getgenv().infstuff do
                    task.wait()
                    getrenv()._G:Stamina(-100)
                    end
                else
                    getgenv().infstuff = false
                end
            end    
        })

        MiscellaneousSection:AddToggle({
            Name = "Infinite Breathing",
            Default = false,
            Save = true,
            Flag = "infinite_breathing",
            Callback = function(state)
                if state then
                    getgenv().infstuff = true
                    while getgenv().infstuff do
                    task.wait()
                    getrenv()._G:Breath(-100)
                    end
                else
                    getgenv().infstuff = false
                end
            end    
        })

        local NoCdMoves = false
        local oldindex
        
        MiscellaneousSection:AddToggle({
            Name = "No Cooldown (Can Kick)",
            Default = false,
            Callback = function(state)
                NoCdMoves = state
                if NoCdMoves then
                    oldindex = hookmetamethod(game, "__index", function(index, value)
                        if tostring(index) == "LastUsed" and NoCdMoves then
                            return 0
                        end
                        return oldindex(index, value)
                    end)
                else
                    if oldindex then
                        hookmetamethod(game, "__index", oldindex)
                    end
                end
            end
        })

    MiscellaneousSection:AddButton({
            Name = "Instant Max Breathing",
            Callback = function()
                InstantMaxBreathing()
            end    
        })

        MiscellaneousSection:AddToggle({
            Name = "No Drown",
            Default = false,
            Save = true,
            Flag = "no_drown",
            Callback = function(t)
                getgenv().NoDrown = t
            end    
        })

        MiscellaneousSection:AddToggle({
            Name = "White Screen [FPS Boost]",
            Default = false,
            Callback = function(state)
                if state then
                        game:GetService("RunService"):Set3dRenderingEnabled(false)
                    else
                        game:GetService("RunService"):Set3dRenderingEnabled(true)
                    end
            end    
        })

    MiscellaneousSection:AddToggle({
    Name = "Remove Materials and Shadows [FPS Boost]",
    Default = false,
        Callback = function(state)
            local Players = game:GetService("Players")
            local ReplicatedStorage = game:GetService("ReplicatedStorage")
            local localPlayer = Players.LocalPlayer
            ReplicatedStorage.Player_Data[localPlayer.Name].Settings.Materials.Value = not state
            ReplicatedStorage.Player_Data[localPlayer.Name].Settings.Screen_Shakes.Value = not state
            ReplicatedStorage.Player_Data[localPlayer.Name].Settings.Shadows.Value = not state
            ReplicatedStorage.Player_Data[localPlayer.Name].Settings.Weather_Effects.Value = not state
        end
    })

        MiscellaneousSection:AddToggle({
            Name = "Walk Speed",
            Default = false,
            Save = true,
            Flag = "walk_speed",
            Callback = function(t)
                getgenv().WalkSpeedEnabled = t
            end    
        })

        MiscellaneousSection:AddToggle({
            Name = "Jump Power",
            Default = false,
            Save = true,
            Flag = "jump_power",
            Callback = function(t)
                getgenv().JumpPowerEnabled = t
            end    
        })


    function InstantMaxBreathing()
            local Players = game:GetService("Players")
            local ReplicatedStorage = game:GetService("ReplicatedStorage")
            local localPlayer = Players.LocalPlayer
            ReplicatedStorage.Player_Data[localPlayer.Name].BreathingProgress["1"].Value = 99999999
            ReplicatedStorage.Player_Data[localPlayer.Name].BreathingProgress["2"].Value = 99999999
    end

    -- // NO DROWN - MISCELLANEOUS

        task.spawn(function()
            for i,v in next, getgc(true) do
                if type(v) == "table" and rawget(v, "swim_bar") then
                    while task.wait() do
                        if getgenv().NoDrown then
                            rawset(v, "swim_bar", {
                                [1] = 2,
                                [2] = 2
                            })
                        end
                    end
                end
            end
        end)
        
    -- // WALK SPEED - MISCELLANEOUS

        spawn(function()
            while task.wait() do
                if getgenv().WalkSpeedEnabled then
                    local h = GetHuman()
                    local oldws = h and h.WalkSpeed
                    if oldws then
                        pcall(function()
                            h.WalkSpeed = getgenv().WalkSpeedValue or oldws or 16
                            while task.wait() and getgenv().WalkSpeedEnabled do
                                h.WalkSpeed = getgenv().WalkSpeedValue or oldws or 16
                            end
                        end)
                        h.WalkSpeed = oldws or 16
                    end
                end
            end
        end)

    -- // JUMP POWER - MISCELLANEOUS

        spawn(function()
            while task.wait() do
                if getgenv().JumpPowerEnabled then
                    local h = GetHuman()
                    local oldjp = h and h.JumpPower
                    if oldjp then
                        pcall(function()
                            h.JumpPower = getgenv().JumpPowerValue or oldjp or 50
                            while task.wait() and getgenv().JumpPowerEnabled do
                                h.JumpPower = getgenv().JumpPowerValue or oldjp or 50
                            end
                        end)
                        h.JumpPower = oldjp or 50
                    end
                end
            end
        end)	

    --------- MISC // TRAINING

        local TrainingsSection = MiscTab:AddSection({
        Name = "Auto Trains"
        })

        TrainingsSection:AddToggle({
            Name = "Auto Split Boulder",
            Default = false,
            Save = true,
            Flag = "auto_split_boulder",
            Callback = function(t)
                getgenv().AutoSplitBoulder = t
            end    
        })

        TrainingsSection:AddToggle({
            Name = "Auto Meditate",
            Default = false,
            Save = true,
            Flag = "auto_meditate",
            Callback = function(t)
                getgenv().AutoMeditate = t
            end    
        })

        TrainingsSection:AddToggle({
            Name = "Auto Push Ups",
            Default = false,
            Save = true,
            Flag = "auto_push_ups",
            Callback = function(t)
                getgenv().AutoPushUps = t
            end    
        })

        TrainingsSection:AddToggle({
            Name = "Auto Cup Game",
            Default = false,
            Save = true,
            Flag = "auto_cup_game",
            Callback = function(t)
                getgenv().AutoCupGame = t
            end    
        })

        TrainingsSection:AddToggle({
            Name = "Auto Target",
            Default = false,
            Save = true,
            Flag = "auto_target",
            Callback = function(t)
                getgenv().AutoTarget = t
            end    
        })

    -- // AUTO SPLIT BOULDER - TRAININGS

        spawn(function()
        while task.wait() do
            if getgenv().AutoSplitBoulder then
                pcall(function()
                    game:GetService("Players").LocalPlayer.PlayerGui.ExcessGuis["boulder_split_ui"].Holder.LocalScript.Value.Value = 10000
                end)
            end
        end
        end)

    -- // AUTO MEDITATE - TRAININGS

        spawn(function()
        while task.wait() do
            if getgenv().AutoMeditate then
                pcall(function()
                    game:GetService("Players").LocalPlayer.PlayerGui.ExcessGuis["Meditate_gui"].Holder.LocalScript.Value.Value = 100
                end)
            end
        end
        end)

    -- // AUTO PUSH UPS - TRAININGS

        spawn(function()
        while task.wait() do
            if getgenv().AutoPushUps then
                pcall(function()
                    game:GetService("Players").LocalPlayer.PlayerGui.ExcessGuis["Push_Up_Gui"].Holder.push_up_mat_local_script.Value.Value = 1000
                end)
            end
        end
        end)

    -- // AUTO CUP GAME - TRAININGS

        spawn(function()
        while task.wait() do
            if getgenv().AutoCupGame then
                pcall(function()
                    game:GetService("Players").LocalPlayer.PlayerGui.ExcessGuis["cup_game_gui"].Holder.cup_game_script123.Value.Value = 1000
                end)
            end
        end
        end)

    -- // AUTO TARGET - TRAININGS	

        spawn(function()
        while task.wait() do
            if getgenv().AutoTarget then
                pcall(function()
                    game:GetService("Players").LocalPlayer.PlayerGui.ExcessGuis["chairui"].Holder.LocalScript.Value.Value = 1000
                end)
            end
        end
        end)

    --------- MISC // MODES

        local ModesSection = MiscTab:AddSection({
            Name = "Modes/Buffs"
            })
        
            ModesSection:AddToggle({
                Name = "Semi God Mode [Kamado]",
                Default = false,
                Callback = function(state)
                    if state then
                        game:GetService("ReplicatedStorage").Remotes.heal_tang123asd:FireServer(true)
                    else
                        game:GetService("ReplicatedStorage").Remotes.heal_tang123asd:FireServer(false)
                    end
                end    
            })

            ModesSection:AddToggle({
                Name = "Semi God Mode [ALL RACE]",
                Default = false,
                Callback = function(state)
                    if state then
                        game:GetService("ReplicatedStorage").Remotes.regeneration_breathing_remote:FireServer(true)
                    else
                        game:GetService("ReplicatedStorage").Remotes.regeneration_breathing_remote:FireServer(false)
                    end     
                end    
            })

            ModesSection:AddToggle({
                Name = "Rengoku Mode [Human/Slayer]",
                Default = false,
                Callback = function(state)
                    if state then
                        game:GetService("ReplicatedStorage").Remotes.heart_ablaze_mode_remote:FireServer(true)
                    else
                        game:GetService("ReplicatedStorage").Remotes.heart_ablaze_mode_remote:FireServer(false)
                    end
                end    
            })

            ModesSection:AddToggle({
                Name = "God Speed Mode [Human/Slayer]",
                Default = false,
                Callback = function(state)
                    if state then
                        game:GetService("ReplicatedStorage").Remotes.thundertang123:FireServer(true)
                    else
                        game:GetService("ReplicatedStorage").Remotes.thundertang123:FireServer(false)
                    end
                end    
            })

            ModesSection:AddToggle({
                Name = "God Speed Mode [Human/Slayer]",
                Default = false,
                Callback = function(state)
                    if state then
                        game:GetService("ReplicatedStorage").Remotes.thundertang123:FireServer(true)
                    else
                        game:GetService("ReplicatedStorage").Remotes.thundertang123:FireServer(false)
                    end
                end    
            })

            ModesSection:AddToggle({
                Name = "War Drums Mode [All Races]",
                Default = false,
                Callback = function(Value)
                    getgenv().infWD = Value
            while getgenv().infWD do 
            local args = {
            [1] = true
            }

            game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("war_Drums_remote"):FireServer(unpack(args))
            wait(3) end
                end    
            })

            ModesSection:AddToggle({
                Name = "No Sun Burn [Demon]",
                Default = true,
                Save = true,
                Flag = "no_sun_burn",
                Callback = function(state)
                    if state then
                        game:GetService("Players").LocalPlayer.PlayerScripts["Small_Scripts"].Gameplay["Sun_Damage"].Disabled = true
                    else
                        game:GetService("Players").LocalPlayer.PlayerScripts["Small_Scripts"].Gameplay["Sun_Damage"].Disabled = false
                    end
                end    
            })


    --------- MISC // GOURDS

        local GourdsSection = MiscTab:AddSection({
            Name = "Auto Gourds"
            })
        
            GourdsSection:AddToggle({
                Name = "Auto Blow Specific Gourd",
                Default = false,
                Save = true,
                Flag = "auto_blow_gourd",
                Callback = function(v)
                    getgenv().AutoBlowGourd = v
                end    
            })

            GourdsSection:AddDropdown({
            Name = "Gourds",
            Default = "Big Gourd",
            Options = {"Small Gourd", "Medium Gourd", "Big Gourd"},
            Save = true,
            Flag = "select_gourd",
            Callback = function(v)
                getgenv().GourdSelect = v
            end    
            })

    -- // AUTO GOURD - GOURDS

        task.spawn(function()
        while task.wait() do
            if getgenv().AutoBlowGourd then
                if getgenv().GourdSelect == "Big Gourd" and Data.Yen.Value >= 700 then
                    for i = 1,6 do 
                        task.wait()
                        game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer("buysomething", Plr, getgenv().AutoBlowGourd, Data.Yen, Data.Inventory)
                        wait(1)
                        repeat task.wait()
                            local GourdFound = Plr.Backpack:WaitForChild(getgenv().AutoBlowGourd) or Plr.Character:WaitForChild(getgenv().AutoBlowGourd)
                            game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S_:InvokeServer("blow_in_gourd_thing", Plr, GourdFound, 1)
                        until not Plr.Backpack:FindFirstChild(getgenv().AutoBlowGourd)
                    end
                elseif getgenv().GourdSelect == "Medium Gourd" and Data.Yen.Value >= 450 then
                    for i = 1,5 do 
                        task.wait()
                        game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer("buysomething", Plr, getgenv().AutoBlowGourd, Data.Yen, Data.Inventory)
                        task.wait(1)
                        repeat task.wait()
                            local GourdFound = Plr.Backpack:WaitForChild(getgenv().AutoBlowGourd) or Plr.Character:WaitForChild(getgenv().AutoBlowGourd)
                            game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S_:InvokeServer("blow_in_gourd_thing", Plr, GourdFound, 1)
                        until not Plr.Backpack:FindFirstChild(getgenv().AutoBlowGourd)
                    end
                elseif getgenv().GourdSelect == "Small Gourd" and Data.Yen.Value >= 200 then
                    for i = 1,6 do
                        task.wait()
                        game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer("buysomething", Plr, getgenv().Gourd, Data.Yen, Data.Inventory)
                        wait(1)
                        repeat task.wait()
                            local GourdFound = Plr.Backpack:WaitForChild(getgenv().AutoBlowGourd) or Plr.Character:WaitForChild(getgenv().AutoBlowGourd)
                            game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S_:InvokeServer("blow_in_gourd_thing", Plr, GourdFound, 1)
                        until not Plr.Backpack:FindFirstChild(getgenv().AutoBlowGourd)
                    end
                end
            end
        end
        end)

    --------------------------------------------------------------------------------------------

    --------- TELEPORTS // LOCATIONS

    local LocationsSection = TeleportsTab:AddSection({
        Name = "Locations"
        })

        LocationsSection:AddToggle({
        Name = "TP to Trainer",
        Default = false,
        Callback = function(v)
            getgenv().TPtoTrainer = v
        end    
    })

    LocationsSection:AddDropdown({
    Name = "Trainers",
    Default = "Trainer",
    Options = {"Water Trainer","Thunder Trainer","Insect Trainer","Wind Trainer"},
    Save = true,
    Flag = "select_trainer",
    Callback = function(v)
        getgenv().TrainerSelected = v
    end    
    })

    LocationsSection:AddToggle({
    Name = "TP to Location",
    Default = false,
    Callback = function(v)
        getgenv().TPtoLocation = v
    end    
    })

    LocationsSection:AddDropdown({
    Name = "Locations",
    Default = "Location",
    Options = {"Zapiwara Mountain","Waroru Cave","Slasher Demon","Ushumaru Village","Ouwbayashi Home","Kabiwaru Village","Zapiwara Cave","Dangerous Woods","Final Selection","Kiribating Village","Butterfly Mansion","Abubu Cave","Testing Place"},
    Save = true,
    Flag = "select_location",
    Callback = function(v)
    getgenv().AreaSelected = v
    end    
    })

    local TweenService = game:GetService("TweenService")
    local function TPtoMuzan()
        local Muzan = workspace:FindFirstChild("Muzan")
        if Muzan then
            local SpawnPos = Muzan:FindFirstChild("SpawnPos")
            if SpawnPos then
                local targetPosition = SpawnPos.Value
            
                -- Perform CFrame Tween using TweenService
                local humanoidRootPart = LP.Character.HumanoidRootPart
                local tweenInfo = TweenInfo.new(
                    10, -- Duration
                    Enum.EasingStyle.Quad, -- EasingStyle
                    Enum.EasingDirection.Out -- EasingDirection
                )
                local tween = TweenService:Create(humanoidRootPart, tweenInfo, { CFrame = CFrame.new(targetPosition) })
                tween:Play()
            end
        end
    end

    LocationsSection:AddButton({
        Name = "Teleport To Muzan",
        Callback = function()
            TPtoMuzan()
        end    
    })

    -- // LOCATIONS - TELEPORTS

    spawn(function()
        while task.wait() do
            pcall(function()
                if TPtoTrainer then
                    if not LP.Character.HumanoidRootPart:FindFirstChild("BodyVelocity") then
                        antifall4 = Instance.new("BodyVelocity", LP.Character.HumanoidRootPart)
                        antifall4.Velocity = Vector3.new(0, 0, 0)
                        antifall4.MaxForce = Vector3.new(9e9, 9e9, 9e9)
                    elseif LP.Character.HumanoidRootPart:FindFirstChild("BodyVelocity") then
                        repeat task.wait()
                            if GetDistance(TrainersCF[TrainerSelected]) < 50 and GetDistance(TrainersCF[TrainerSelected]) < 150 then
                                if TweenFa then
                                    TweenFa:Cancel()
                                    wait(.1)
                                end
                                LP.Character.HumanoidRootPart.CFrame = TrainersCF[TrainerSelected]
                            else
                                TweenFa = Tween(TrainersCF[TrainerSelected])
                            end
                        until not TPtoTrainer
                    end
                else
                    antifall4:Destroy()
                end
            end)
        end
        end)
        
        spawn(function()
        while task.wait() do
            pcall(function()
                if TPtoLocation then
                    if not LP.Character.HumanoidRootPart:FindFirstChild("BodyVelocity") then
                        antifall5 = Instance.new("BodyVelocity", LP.Character.HumanoidRootPart)
                        antifall5.Velocity = Vector3.new(0, 0, 0)
                        antifall5.MaxForce = Vector3.new(9e9, 9e9, 9e9)
                    elseif LP.Character.HumanoidRootPart:FindFirstChild("BodyVelocity") then
                        repeat task.wait()
                            if GetDistance(Locations[AreaSelected]) < 50 and GetDistance(Locations[AreaSelected]) < 150 then
                                if TweenFa then
                                    TweenFa:Cancel()
                                    wait(.1)
                                end
                                LP.Character.HumanoidRootPart.CFrame = Locations[AreaSelected]
                            else
                                TweenFa = Tween(Locations[AreaSelected])
                            end
                        until not TPtoLocation
                    end
                else
                    antifall5:Destroy()
                end
            end)
        end
        end)
        

    --------- TELEPORTS // SERVER

    local ServerSection = TeleportsTab:AddSection({
        Name = "Other Server Stuffs"
        })

        ServerSection:AddButton({
            Name = "Server Hop",
            Callback = function()
                Hop()
            end    
        })

        ServerSection:AddButton({
            Name = "Join to Lowest Server",
            Callback = function()
                getgenv().AutoTeleport = true
                getgenv().DontTeleportTheSameNumber = true 
                getgenv().CopytoClipboard = false
                if not game:IsLoaded() then
                    print("Game is loading waiting...")
                end
                local maxplayers = math.huge
                local serversmaxplayer;
                local goodserver;
                local gamelink = "https://games.roblox.com/v1/games/" .. game.PlaceId .. "/servers/Public?sortOrder=Asc&limit=100" 
                function serversearch()
                    for _, v in pairs(game:GetService("HttpService"):JSONDecode(game:HttpGetAsync(gamelink)).data) do
                        if type(v) == "table" and v.playing ~= nil and maxplayers > v.playing then
                            serversmaxplayer = v.maxPlayers
                            maxplayers = v.playing
                            goodserver = v.id
                        end
                    end       
                end
                function getservers()
                    serversearch()
                    for i,v in pairs(game:GetService("HttpService"):JSONDecode(game:HttpGetAsync(gamelink))) do
                        if i == "nextPageCursor" then
                            if gamelink:find("&cursor=") then
                                local a = gamelink:find("&cursor=")
                                local b = gamelink:sub(a)
                                gamelink = gamelink:gsub(b, "")
                            end
                            gamelink = gamelink .. "&cursor=" ..v
                            getservers()
                        end
                    end
                end 
                getservers()
                if AutoTeleport then
                    if DontTeleportTheSameNumber then 
                        if #game:GetService("Players"):GetPlayers() - 4  == maxplayers then
                            return warn("It has same number of players (except you)")
                        elseif goodserver == game.JobId then
                            return warn("Your current server is the most empty server atm") 
                        end
                    end
                    game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, goodserver)
                end
            end    
        })

        ServerSection:AddButton({
            Name = "Rejoin",
            Callback = function()
                game:GetService("TeleportService"):Teleport(game.PlaceId, game:GetService("Players").LocalPlayer)
            end    
        })

        ServerSection:AddButton({
            Name = "TP to Hub",
            Callback = function()
                game:GetService('TeleportService'):Teleport(9321822839)
            end    
        })

        ServerSection:AddButton({
            Name = "TP to Map 1",
            Callback = function()
                game:GetService('TeleportService'):Teleport(6152116144)
            end    
        })

        ServerSection:AddButton({
            Name = "TP to Map 2",
            Callback = function()
                game:GetService('TeleportService'):Teleport(11468159863)
            end    
        })

        ServerSection:AddButton({
            Name = "TP to Trading",
            Callback = function()
                game:GetService('TeleportService'):Teleport(13489082242)
            end    
        })

    --------------------------------------------------------------------------------------------

    --------- CREDITS // DISCORD

    local CreditsSection = CreditsTab:AddSection({
        Name = "Credits"
        })

    local textbox = CreditsTab:AddTextbox({
        Name = "DisplayName",
        Default = "SharkHub",
        TextDisappear = true,
        Callback = function(value)
            game:GetService("Players").LocalPlayer.DisplayName = value
        end
    })

    CreditsSection:AddLabel("ImperorLegend // LUA coding kiddie")

    -- // FARM METHOD
    spawn(function()
        while wait() do
            pcall(function()
                SkillActive = AutoUseSkills and (FarmBoss and NearestMobs) or AutoUseSkills and (FarmQuest and NearestMobs) or AutoUseSkills and (FarmMob and NearestMobs) or AutoUseSkills and (AllBosses and NearestMobs)
                if FarmMethod == "Above" then
                    FarmModes = CFrame.new(0,getgenv().Distance,0) * CFrame.Angles(math.rad(-90),0,0) 
                elseif FarmMethod == "Below" then
                    FarmModes = CFrame.new(0,-getgenv().Distance,0) * CFrame.Angles(math.rad(90),0,0)
                elseif FarmMethod == "Behind" then
                    FarmModes = CFrame.new(0,0,getgenv().Distance)
                elseif FarmMethod == "Front" then
                    FarmModes = CFrame.new(0,0,-getgenv().Distance)
                end
                for i,v in pairs(LP.PlayerGui.MainGuis.Items.Scroll:GetChildren()) do
                    Insert = true
                    if v.ClassName == "Frame" and v.Name ~= "Health Elixir" and v.Name ~= "Health Regen Elixir" and v.Name ~= "Stamina Elixir" and v.Name ~= "Bandage" then
                        for i,v2 in pairs(invTable) do if v2 == v.Name then Insert = false end end
                        if Insert == true then table.insert(invTable, v.Name) end
                    end
                end
            end)
        end
        end)

    -- // NO CLIP

    spawn(function()
        game:GetService("RunService").Stepped:Connect(function()
            if getgenv().AllBosses or TPtoLocation or TPtoTrainer or getgenv().GotoMuzan or FarmBoss then
                for _, v in pairs(game:GetService("Players").LocalPlayer.Character:GetDescendants()) do
                    if v:IsA("BasePart") then
                        v.CanCollide = false    
                    end
                    if v:IsA("Humanoid") then
                        v:ChangeState(11)
                    end
                end
            end
        end)
    end)
    OrionLib:Init()